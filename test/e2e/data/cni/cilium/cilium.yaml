# Created by `make e2e-cilium-templates`
---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU10cjZ1QnplazRZYVdteFJ6M0xQdWt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVd09ESXhOREV6T1ZvWERUSTNNRFV3T0RJeApOREV6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3K25HazZyR2wvRGVrVXFuUVJjczZaTzRwK1RRZS9KWEp6dXZrNVZxVGpQSTEzZW8KaWhtWTYxSW52QTZGek9Xc0l6ejJjS0Q1NUxiOWdGY2VRcUh6Tm1aOFE4U2hLbkt1ZEM1L0FDT3NUcCtISS8rVwp1VFhRVzBKY21HUzFCSGhYeUhINU9aV3NWUlhRajNDV2ZiQ2taeGRYSnlBeXMxQ1pmZjY3VWtUOFA1SDJFaFYxCk9ScStlUk5vWlJCZnRkNTNNMzVTVFBpaXhpWjVXVTZJd2gxYWgvSzd3eWZ4Zy9BSEtabFpKbnBrV2l6S1AwZngKK05LUEtWMGR3S3Mza2t0dW5IMElRUkpBczJHaWU2QUdPWmJGeEt5RzJHNDJ4akNVMS9qalF3dnd1WnNUZDFzdgoxbExMTXJWVmpNdmhwd2pUSVMwZDl1UlIwYnBseVcwUHVqUGNyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0tjZjQzUng3TW5teDhIZ0VMb0NmSmhFOVlZTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmh6ZnRKYU1RUVovcUZvUytkcFp1Nm0za1hBUCtNVFNKakN6Ty9PbS96YnZQYWsyYU52RVFVCmVCM3pUSmQ2NVpNajY4RnlXTms2MXN2b2pwZXRvZWdkUlpOcVJDTDlEd2JaUDlMdmJtTjl2OFAvUW93THQ0dmMKd0pkU3lXa0w0TTdLeVBoM0lvZ21UMkc5SzM4TFlXWWFCaUs3b1ArNXVXQnpQN0R1anJDRkk2RVFtK292TGdVcApIdGd6STVBd3lPcXl4WWtvTE9Fc25ZL3VQbjJQTXloWFJsT0FDeG41SU5hMXp5OUpEb1htV1A4K1AydkFVb3Q2CjdyTkpUa0tFd1M4T3FEK041RWUwUldmZTdqOGF0M3JqUjZmaVBiMklnRHhnQ2NTOXFrSTl5RWxMQUJnTHR2YSsKekpOVHNGVUZWazV0amZWcjNaYUw1Zi9jZThtbUI0Z1kKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdytuR2s2ckdsL0Rla1VxblFSY3M2Wk80cCtUUWUvSlhKenV2azVWcVRqUEkxM2VvCmlobVk2MUludkE2RnpPV3NJenoyY0tENTVMYjlnRmNlUXFIek5tWjhROFNoS25LdWRDNS9BQ09zVHArSEkvK1cKdVRYUVcwSmNtR1MxQkhoWHlISDVPWldzVlJYUWozQ1dmYkNrWnhkWEp5QXlzMUNaZmY2N1VrVDhQNUgyRWhWMQpPUnErZVJOb1pSQmZ0ZDUzTTM1U1RQaWl4aVo1V1U2SXdoMWFoL0s3d3lmeGcvQUhLWmxaSm5wa1dpektQMGZ4CitOS1BLVjBkd0tzM2trdHVuSDBJUVJKQXMyR2llNkFHT1piRnhLeUcyRzQyeGpDVTEvampRd3Z3dVpzVGQxc3YKMWxMTE1yVlZqTXZocHdqVElTMGQ5dVJSMGJwbHlXMFB1alBjclFJREFRQUJBb0lCQUhKTVFtRkdnZ1NGTDZSKwpkR1BpUEg2dGcwN1lqTld6Uml1S2c5M0xqekMrdjQ4TnJaT2NhWDNvK1d1YTRXN3dFK1NmSFh3S1BxQzBMZU9oCmIvTVovd1llOXFLbTVnd1l5alRZSjVvU05lWE01cEFXL24xaHF3U0RDL2lRMEpjaUNyelQyYjVCMXovd3NUUHUKVUs1Vnp5U2lGbU9xUWtvaFhOdUlNUXRIV2c5UGQ4R0tZNUVqc25SUG9SWDU4d2JLdXQyWHZQUndqTE1MOEN0OQpVK1RuM2VIekxuZnZQMGJPTkZDb1FNS1JpTmx1T2tYT2JVdUp3bWdGQkk4eHdISzl0OHNObXlKQmMvSlNSWFNTCi9JeS9OT3BQOTJQbXNYSmZoa1E2dytTb2JUNVlWanE2c3gva01Jc0FtbDhQeEZiZUxJcmNWWTdWZFFYT2dEQlUKLzlhZ2drRUNnWUVBOFVOeXVPdkFsQXBTKzUrOTR4bUJqWG5WdERhOTZoVFRPQVVlTTZ1elZiL1pqcGtZZWx0ZQpQL3drRnl6dGthMHVhY3Z1cnNpZHRvZENqbno5TGY2eWVwK2ExKzducXBxbXJ3N2drTnNVaTREMkxpUnhZNEJHCmxIcDFKcElIejFOVUFyK1hjV0xIT1UwdFJ6c2Q0ZVZoc2VpSUs1TFRDQlpVVUgraDZhb2s3OUVDZ1lFQXorRXoKZnpJeG1jK25kaTQyY2ozRmZjWEYrdVFlQzBHOTB6TVFLampJalk2bXJNcTdrZnJqMUczRGp0d1UzVjVjcUQwagpRMWxuTUloS1BacjhlaEhwbHQ2R0ZjZjdaVUZCbkdsMUhJeWZMbEQ5ZVY3NW4xNmdpcUN3ait4R2VlaHovT0t3CmhiZUt2Snk1YlBLcDhGMjRVOTJGTUFWdzJsb0h2T0JLMUZxb0VoMENnWUVBenZJeStxbkdJM1lEbmpCMGVkTk0KRENXZ2lKZVlLYXk1VE1rZkVlVkt5OWZuYm1pbDFYYUFEdFJoeEx0V0FHb1RjTTVycXVNTVhTQUNtQ1JnSzA3WQptMVJDUnN4M1RTQ2dyM0pNY0JScnVBbmpvTXJEdER5NHplMkloWkFuUU5CU05KVlErd0ptcnlFaklJRjE3V21MCmRrWm1Yekh1OEhYdTFxblVJWkUvWTdFQ2dZRUFqbkZHNHpLV3NFbU0renNCVGRpcitkbktKbmVuYXBrNnBIeUoKNkJTT3dBanVodHBJR3VocXN3WWZpVVdlK20wTldxN0IrZ1ZKNHdTUXNwUC95dmw1TVVyN1gvTnZmTnR4Uk9jeQpPMFRVVWwxbXdvTGswMko0NldUZ2QwNDBvSlk2M0I3TlRHTVBLdHpOWmkwRmExSWMyMEtnWDk1cWpRUkI1eGRkCnp4THJ0YlVDZ1lCMTRWZ2EvWFJ3RUtSSDdFY0thd2JrSzVTZWRBVk52MXZmOEREMURvdDNhOHREUlQwYy9SRy8KOUZlb0JQTm56c1RVdy9RNXB3ZzBoR3JYUStPK1ZOSDVRU29Wd05VTE1tMDJkRWtpcE1GOGh2a2x3aURTTGswegpzZC9QWFM4VVZMY0wyUVpmMXZWTFVaUEN2a2RnWmhLZElZaVlJWXVYQ2lsVEE3anRWVHVDTEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU10cjZ1QnplazRZYVdteFJ6M0xQdWt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVd09ESXhOREV6T1ZvWERUSTNNRFV3T0RJeApOREV6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3K25HazZyR2wvRGVrVXFuUVJjczZaTzRwK1RRZS9KWEp6dXZrNVZxVGpQSTEzZW8KaWhtWTYxSW52QTZGek9Xc0l6ejJjS0Q1NUxiOWdGY2VRcUh6Tm1aOFE4U2hLbkt1ZEM1L0FDT3NUcCtISS8rVwp1VFhRVzBKY21HUzFCSGhYeUhINU9aV3NWUlhRajNDV2ZiQ2taeGRYSnlBeXMxQ1pmZjY3VWtUOFA1SDJFaFYxCk9ScStlUk5vWlJCZnRkNTNNMzVTVFBpaXhpWjVXVTZJd2gxYWgvSzd3eWZ4Zy9BSEtabFpKbnBrV2l6S1AwZngKK05LUEtWMGR3S3Mza2t0dW5IMElRUkpBczJHaWU2QUdPWmJGeEt5RzJHNDJ4akNVMS9qalF3dnd1WnNUZDFzdgoxbExMTXJWVmpNdmhwd2pUSVMwZDl1UlIwYnBseVcwUHVqUGNyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0tjZjQzUng3TW5teDhIZ0VMb0NmSmhFOVlZTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmh6ZnRKYU1RUVovcUZvUytkcFp1Nm0za1hBUCtNVFNKakN6Ty9PbS96YnZQYWsyYU52RVFVCmVCM3pUSmQ2NVpNajY4RnlXTms2MXN2b2pwZXRvZWdkUlpOcVJDTDlEd2JaUDlMdmJtTjl2OFAvUW93THQ0dmMKd0pkU3lXa0w0TTdLeVBoM0lvZ21UMkc5SzM4TFlXWWFCaUs3b1ArNXVXQnpQN0R1anJDRkk2RVFtK292TGdVcApIdGd6STVBd3lPcXl4WWtvTE9Fc25ZL3VQbjJQTXloWFJsT0FDeG41SU5hMXp5OUpEb1htV1A4K1AydkFVb3Q2CjdyTkpUa0tFd1M4T3FEK041RWUwUldmZTdqOGF0M3JqUjZmaVBiMklnRHhnQ2NTOXFrSTl5RWxMQUJnTHR2YSsKekpOVHNGVUZWazV0amZWcjNaYUw1Zi9jZThtbUI0Z1kKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUpGSHQvTGdKeU42b1U1WUI5WVFaeG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVd09ESXhOREUwTUZvWERUSTNNRFV3T0RJeApOREUwTUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXQ5Yy9yR1E1R3BQSkp1ZnFFcUp2TDh2WWdRdkQKZTA2R3Z6SG1yZWxlRU9haG8wSmVsTUI3YVQ5cGRoY3BYNS9mK1NkVXJrQlVHRStDMW5YbC93S01UK1BkenRHZgpiczdjQVdBNkl0dktuMU1xVlVYb29ZajRXWVB3ayt3Mmp5S3QyRjRIcys5aDlsdHdzWTJmR3FJSU1iak5XcnBXCm9OS1lDZ1A0dG5TWnFIUTM4N0hYSDUxN3k3eDB0RzROSXFndDVDSk8rV1VqTHFGZUdaU3FjMXdCNHdTN0VhVHkKd0tmWThuTjYweTd4cWZUUUFJSDJySUpwdmVSTHYzUDdzL1I1dVJVZmRoRWRERG9IWlFnNmtTcHlIYnBnbzIxdApYdHhLZGFKRnZZcHkvay9VM01VeVBoN3hjOWF4MEsyU2lqbHNFS3J6NHBjN1Y4VU5oNVhRZTNsSS93SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUmluSCtOMGNleko1c2ZCNEJDNkFueQpZUlBXR0RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQjVRTnNCcFdEMVBBYW9PMGFmNHpMOGNnTGVjNUZTRHFteWRjV1Y0TC9PeGx0SCsKRk9CdEpZMjhhUE1Ic3hydHdUazhVMlpTWENJRVVVYVQwRmZucFdKK3BZT01uNDgvUXJJMkdTQWpnRjJTYWlDcApSUHUwTDhNSTNST082QngvQjllUk1nU2UwdWltbkowakU3TGdCTmZ0NHhXQnp5Mi82UTdiVEN4S1ZudlZmWnFICnBJMUZWUUVDak5Gb2M5dEJrZzM5VjNyQkgzM2xHSTZpZDdhVTJGMkEzRHJGSEh0b2kzSlN6anlrcUQ2OG9pV1AKK1Qxc21iZUt5cU1pN3FFWktuL2kvY014WWp0SWsrQ1IvbGpIVmpXbHhjNjhUWkd3ZUlQOFk3SWZaSVpRbE5IZApLeDdnRHIzUmJsS1hvcHNZdERuQzNZOUk3dGF4TXhjczVjcitYZzg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdDljL3JHUTVHcFBKSnVmcUVxSnZMOHZZZ1F2RGUwNkd2ekhtcmVsZUVPYWhvMEplCmxNQjdhVDlwZGhjcFg1L2YrU2RVcmtCVUdFK0MxblhsL3dLTVQrUGR6dEdmYnM3Y0FXQTZJdHZLbjFNcVZVWG8Kb1lqNFdZUHdrK3cyanlLdDJGNEhzKzloOWx0d3NZMmZHcUlJTWJqTldycFdvTktZQ2dQNHRuU1pxSFEzODdIWApINTE3eTd4MHRHNE5JcWd0NUNKTytXVWpMcUZlR1pTcWMxd0I0d1M3RWFUeXdLZlk4bk42MHk3eHFmVFFBSUgyCnJJSnB2ZVJMdjNQN3MvUjV1UlVmZGhFZEREb0haUWc2a1NweUhicGdvMjF0WHR4S2RhSkZ2WXB5L2svVTNNVXkKUGg3eGM5YXgwSzJTaWpsc0VLcno0cGM3VjhVTmg1WFFlM2xJL3dJREFRQUJBb0lCQVFDRUgxSkhsdy9qSmVzZQo1dlcyeHI2WjN5cU9NK0lkc0dYdTZ2SWFjdW1Edy96TzFGZ2RGK2laejFULzVjMTZSL0F6cEN5YnZ1ZXhRUk9MCkJkaHgyV2IxMDVJSm5XV3p3VDhrVGYvNkpYUU41VHM3WmE2MnlUV1RQOXVhczl6U0tkNCs3ZlVqUUJ0cmJuUWoKWnVDOXgwMlVUbmhuaUJ2U0lRZmJ5dGJvYWd3MG4zbk5qT3J2SE50K0Y4WUhzUGVxcXRYUlBVVHBNSmxWcFJESgozUjZ4MEF4YlJweDFianhaSHhhWWZUSUF0M0dZSUVhNzNwUmJCTVZDQkh4bm9rS1p5N3B6c3JRK1NEZXo5VHFBCkxDcW96NkNFV2RTWkRvQjdsNkRxd1JraUpxaEF3ZVg3MXFNUFc1aUxyVDlJVjVnTEc3c1VmWXNmWVQwR3dxL1YKbUx4ZmFMSmhBb0dCQU4rNkdCdmhURkJyS3NzcWdKSWw0VU1HWjQ1TzRCa01qWkN1cXlFbXRTem5tUlpMd0dZdQorNitZV2U3YUMxTGx1TFNOT1I3UWxna1BPUkc5RVNRWUVkc2w4ejRQcWY1VzlNK0huaWNTcDhrbmhJbFQzNDJhCnBUOXVrUng4S0xwL1o1NUFxajlDdkJoMXRRVjl4SE9ROHc0NG1YenlaU1RyOEJDcnBvYmtWc2gxQW9HQkFOSmMKT0JjT0x3V2ViUkpQdTRYczA4a1VpeURRSlNYdGVROEVGcnVYay9MeDRiMzRlQ2toR2MyRk5wblZZNXp4VUw3ZwpYNlgwY09pK2NYMjdXQVphQ25nanlsK1VTNlo2d3FaNXNoeEFINE9SUVJOenpTSElUVHpqY2NIRnZlN08wTEpJCjVqQ1Z4cTdHa3Rjd1BXaWVFcHgwOHAzRE83MEZ0MWMyakVwRGVEMGpBb0dBZG9rZnF1M2t4QnJ6c204VGJkdWEKRFN3QWcvcXdhelVtY0VqTExLWllpYkV2Z0F1a3BiOHc1S2xBeFBkTDFxRVdDcnRrVHpwT3RBQVh5WmsxMHJ6YQpBUldMV2c5c2p2QTloeE1nclMwS0x0NjhMeEo4T0lkK0ZDeWR2OHpjdTJzeldEcUV1VDIvY09vMGZmTlR1Yk5MCncvWWpCSHRkTVlHOFVPalJNMWtaemQwQ2dZQUZhV1h3QWVkbng1bWF2UDVnQmFXMUtKZ2pzZmNpc0tkS29acE0KSFN3ck5kbk8zMU9JQzFmMGw1YStBbVZicGtHamgzWXVlTWxtMDI5c0FxUFRGZ0hxOFZERmdMVXBoVUw0c1d6SgptVVMyUjhoYXpjSGJPcUh5RFEvaUlrb3VtSmQ1M3JJOVViMFl4ZmNGSGpLV1BHclNKNWdPUXZXSWVWc3NIVFVpCnUvV2Q3UUtCZ0R0TFFxbkNJSkFMYkZiR0lGem02WTQvaCtEV255MEZQMWlOTFRSbS9ZQnRVRzk1eDBUaUpPaTgKcnF2RGsyaGJhd3A0bjBGVzFxenVDWmdEaTVBYzhCSEMzL05mSDZPMlhVSzRvNXhnQVc5UlVYRU5kd25JY1kzeApEcTdGUWs5YnVlbS8xWGNtekhud2M5NDNxdTdBUXdsTDlSQm9NV1k3bFVXcHNEeGg4ZTVBCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU10cjZ1QnplazRZYVdteFJ6M0xQdWt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVd09ESXhOREV6T1ZvWERUSTNNRFV3T0RJeApOREV6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3K25HazZyR2wvRGVrVXFuUVJjczZaTzRwK1RRZS9KWEp6dXZrNVZxVGpQSTEzZW8KaWhtWTYxSW52QTZGek9Xc0l6ejJjS0Q1NUxiOWdGY2VRcUh6Tm1aOFE4U2hLbkt1ZEM1L0FDT3NUcCtISS8rVwp1VFhRVzBKY21HUzFCSGhYeUhINU9aV3NWUlhRajNDV2ZiQ2taeGRYSnlBeXMxQ1pmZjY3VWtUOFA1SDJFaFYxCk9ScStlUk5vWlJCZnRkNTNNMzVTVFBpaXhpWjVXVTZJd2gxYWgvSzd3eWZ4Zy9BSEtabFpKbnBrV2l6S1AwZngKK05LUEtWMGR3S3Mza2t0dW5IMElRUkpBczJHaWU2QUdPWmJGeEt5RzJHNDJ4akNVMS9qalF3dnd1WnNUZDFzdgoxbExMTXJWVmpNdmhwd2pUSVMwZDl1UlIwYnBseVcwUHVqUGNyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0tjZjQzUng3TW5teDhIZ0VMb0NmSmhFOVlZTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmh6ZnRKYU1RUVovcUZvUytkcFp1Nm0za1hBUCtNVFNKakN6Ty9PbS96YnZQYWsyYU52RVFVCmVCM3pUSmQ2NVpNajY4RnlXTms2MXN2b2pwZXRvZWdkUlpOcVJDTDlEd2JaUDlMdmJtTjl2OFAvUW93THQ0dmMKd0pkU3lXa0w0TTdLeVBoM0lvZ21UMkc5SzM4TFlXWWFCaUs3b1ArNXVXQnpQN0R1anJDRkk2RVFtK292TGdVcApIdGd6STVBd3lPcXl4WWtvTE9Fc25ZL3VQbjJQTXloWFJsT0FDeG41SU5hMXp5OUpEb1htV1A4K1AydkFVb3Q2CjdyTkpUa0tFd1M4T3FEK041RWUwUldmZTdqOGF0M3JqUjZmaVBiMklnRHhnQ2NTOXFrSTl5RWxMQUJnTHR2YSsKekpOVHNGVUZWazV0amZWcjNaYUw1Zi9jZThtbUI0Z1kKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRVUJDc2VyaDdHOG5BV1Ztc1YzaFB6REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRBNE1qRTBNVFF3V2hjTk1qY3dOVEE0TWpFMApNVFF3V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBc1ZMUGxTeWxGTEw4SjExdERVQ1cKMlpJMDhIcVRCVlJYVDNoQUxJeUMvWTlVVk9id3VqanoxWTVURk8yRjRQaTVrUDJ6R2diZlZiMklaMSsrVVJVTgo4OEpDeDBiYXJ4YkFGSWh4UkZ0TU5xcEx5a0RkcmVKMW5LanRINXRubTN5dy9VSWh0ZlczVm11ZVVrNGo1Y1NRCm5NODl3UHQrQ005Tm1kL2syamdFV2YyTis1NUR0ZGI5SEdOb3RtOXdBNWlNbGpmYmxMWldDQmtPUGFnZnVlRFoKWGdvRjc0bG90c0U2UU5sN1RJSlpkdGZRYlZ4a1l5L1ladFNid1JpTDB6Nlp1ZDNUZ2tSajBSdUFaeGpvZGZNYQpWTndQbjhOc1JLRktOdnZOM3hMV0kvZWFaNzFiZGJ3ekRmK05QZktVcXREQXRMMUlJTmdmMUxaY2w1VU5jOTJxCm5RSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSaW5IK04wY2V6SjVzZgpCNEJDNkFueVlSUFdHREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDZGQxNEtFVnBWSlZqSEo3K05Ic2Q2NVpnWUhYN0UKSGtnMjJ2RVlLbytCLzlTZEU0Vm4zaUlEWGwyT0xseENzZ2llTEcxNTdQQ2hET0FxbmhPeG5WUmVBVWNlMENROQpDN09LSnN6cGpmdFBibXg0d0xxSWY4UlBIeEVnZDVxVXI1Q0tpeW12UkFQZGhtTWI3MThQczNpZFRWVTZIamc0Ck9lbE5wVlV1aFhsR3FPakxOd3JEYnRwNGJRWE8vNlBZRGN5ZUdyQlp3Y3FySTRsRWxjd2I1aGZLT0RSNkIxMmYKRnJ0aUhqYUJvaFpiQ0RhT3lNWjd6VVZJNkNSOS9lcTFXQmFXVi9oSVdLNnhteWVKYythKzI5SzBrdjFOZDhSbQoxcVdIajRzdThFbkRKOENDRDI2R25qU2lXRVlPeE52RWNnYW56RzIvUDZGVmIvUnhra2NsYkRObAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1ZMUGxTeWxGTEw4SjExdERVQ1cyWkkwOEhxVEJWUlhUM2hBTEl5Qy9ZOVVWT2J3CnVqanoxWTVURk8yRjRQaTVrUDJ6R2diZlZiMklaMSsrVVJVTjg4SkN4MGJhcnhiQUZJaHhSRnRNTnFwTHlrRGQKcmVKMW5LanRINXRubTN5dy9VSWh0ZlczVm11ZVVrNGo1Y1NRbk04OXdQdCtDTTlObWQvazJqZ0VXZjJOKzU1RAp0ZGI5SEdOb3RtOXdBNWlNbGpmYmxMWldDQmtPUGFnZnVlRFpYZ29GNzRsb3RzRTZRTmw3VElKWmR0ZlFiVnhrCll5L1ladFNid1JpTDB6Nlp1ZDNUZ2tSajBSdUFaeGpvZGZNYVZOd1BuOE5zUktGS052dk4zeExXSS9lYVo3MWIKZGJ3ekRmK05QZktVcXREQXRMMUlJTmdmMUxaY2w1VU5jOTJxblFJREFRQUJBb0lCQUZlV3hCcTNkc09HdGE3cwpJeFhNdGJhNjFaT0R1R09GaWFzamh1OTZhS20reHJVNWJlZE9nb01XVGt1a0YrRk1lcnozMUNRakNPWmRQS2R6ClQ1clZmNUxNZmhmWkUrUXdwS2gvelJNcTFiYWEzOTBEdFh4U3hDMmg4NThOTUZ4SmQxTmgreXphTnJsbFowclkKZGpya29Wb1R0RGxEQUxweFM2K2FQSHpkOXFoTUY2cXJ0TFQxeVdWK2hVaWZBUE94K2o2TWhFcWdzZ1hvZ1piZQpXdVBrWXdLTGdmbk9VT2JGSHdQTEpDbVBka1c0Ty84czQxNUJFOHRMNUJOczJYMklOcUVramdPOGhWalVUcEhUCnMyTFlKbFFxcXpDVEJ1NXBmOEVFUkh6ZFNHUTY2VnBBL21LUlR5UHU4Z28wRE5kYWZWTjZ4aXRIZktYZHV3SVEKejU0bFhnRUNnWUVBeVkzaStYeXVCM3pXWFJrOTNuUU9lZnlPNk5wUjVjUkpHVWxKNEhSdkkrbVg2S1hQV3YzaApmc2JXd2tjRlR4SVB4Y1AyUlU1Tm15dklheGhOZjZGRnJiWDJvS1RNREZqK3Mrc0h0U2FSTU9xc1F2bm9OZlptCjRHMHRXdWJmdXJIZUM5TjBqZ21TamRwODA0MFBKTFJXZ28vOWdhNWFYTjlNZ0pOeWU5QlJUS0VDZ1lFQTRUbEsKVGV0QytXU20vbFhVTlpXVzdvRHU3WXdUSzRuNy9qSTFya0JMT0pRL2Q0NWQwdmp4NkNKWExtYzhNaDFONVZjZAp5amdPS1FQQnc2anhxZFRsajh2amlUZ0xmSWdTM3ZqL0tSS2UyNTdnMFphbndCV2FYbEZKak0zY2xUL25xUXZWCitPT0RmOFU1V3NEZ3VYc2Q3elNZbWZTOWFBRlI4RU10K1k4alFIMENnWUEzWlFPb3hoZWVmelQ3U1dDenJ2bjcKbE9wQ0hSNjlJNEZqcmJ6Y0w2UU1IcnRkZVpUUDBVOFVaTm5KYzNPR0U5UzU2ZTNaaG5mVjJlYXZhSEtFVFhLMQpGM205RlEzdnB0WDU1UEt0V3ZnMGxZcmFyWXlncUNRR01udHdyRnQ1R0VHS3hvY1dNcE5RNFdmRlROT0lwdmZQCjBucytGUWxJMVNaVmdEREt6cXBKZ1FLQmdRQ2d2eG9JYU94aFFYUnF2R2w4WVNyYlNVeStZS1ppQWRiSUE2QUsKb1RyT3hBaFVWVmtqdGFnNlRTQTZMMVpvVWtBQmV0NzVNRzd5MlFxWGttSUJHOEZJazNYdnZ2OTd2MGJ3dTNpcQpJTzhld3RPazQwa1JNSm4velRhWWQybURZSndBTEVGb3BVRjZsUkl0Y3RJeHIreWFpTWlOd1g3WjEyOWE4eWZDCklXWkFwUUtCZ0JLWXFpL29RenhBZ3BZUm55ZjRMMWhYOFNaYzF3U0xPQndlZUo1N2tRWlY2Y3AwMzJFM0xXdm4KUjlWRGhmd3JoZFU4S2YxZFJOSThlNWowMlNWSTJya21uZDFNS1NnVVJ5UEpsYkJxMlVtR0hkQ3paTjJNdEw0dwpyZkdockowamVDT1BCZDdSaUsrZDVkaGUxY3NpNGo2NTJtbjhlN1d1V1U0ZUtSYXNmWTZPCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "partial"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    icmp
    http
  enable-hubble-open-metrics: "false"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "10"
  k8s-client-burst: "20"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9965"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "0c551ea187d04cf49fc9f6f0ea908282cb5582a59fdea58e954925ffd91e1f0a"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "$BIN_PATH/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "$BIN_PATH/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "0c551ea187d04cf49fc9f6f0ea908282cb5582a59fdea58e954925ffd91e1f0a"
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.4@sha256:404890a83cca3f28829eb7e54c1564bb6904708cdb7be04ebe69c2b60f164e9a"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "a54a751d3cf64546dba5b3395687cc09c3b5e47fa7be0877c3b31dcbea6d73ca"
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.4@sha256:03ad857feaf52f1b4774c29614f42a50b370680eb7d0bfbc1ae065df84b1070a"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "e8acee96ed990156efd0291c8c33709d2c7902d2ec993eefa16c7cd3d1a9d84b"
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
